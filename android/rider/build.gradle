apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.2'
    defaultConfig {
        applicationId "com.minimal.taxi.rider"
        minSdkVersion 16
        targetSdkVersion 29
        multiDexEnabled true
        versionCode 27
        versionName "3.0.1"
        vectorDrawables.useSupportLibrary = true
        dexOptions {
            jumboMode true
        }
    }
    if (project.hasProperty("RELEASE_KEY_ALIAS")) {
        signingConfigs {
            release {
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
            }
        }
        buildTypes {
            release {
                signingConfig signingConfigs.release
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    api project(':common')
    implementation 'com.github.Innomalist:floatingsearchview:0.3'
    implementation 'com.airbnb.android:lottie:3.3.1'
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }
    implementation ('com.google.android.libraries.places:places:2.1.0')
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0"
    testImplementation 'junit:junit:4.12'
}
configurations {
    all*.exclude group: 'com.google.guava', module: 'listenablefuture'
}
apply plugin: 'com.google.gms.google-services'